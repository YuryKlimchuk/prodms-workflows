name: Publish client - Build docker & helm - Deploy

on:
  workflow_call:

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout-repository
        uses: actions/checkout@v3

      - name: Upload repository
        uses: actions/upload-artifact@v4
        with:
          name: sources
          path: ./

  client:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sources
          path: ./sources
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Deploy client artifact
        run: |
          ls -a
          cd sources
          mvn deploy -pl client
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  server:
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      ARTIFACT_NAME: ${{ steps.output.outputs.ARTIFACT_NAME }}
      CHART_NAME: ${{ steps.output.outputs.CHART_NAME }}
      CHART_VERSION: ${{ steps.output.outputs.CHART_VERSION }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sources
          path: ./sources
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up env vars
        run: |
          ls -a
          cd sources
          ACTOR=${GITHUB_ACTOR,,}
          ARTIFACT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          SUB_MODULE_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout -pl server)
          DOCKER_IMAGE_FULL_NAME=$(echo "ghcr.io/$ACTOR/$PROJECT_FOLDER/$ARTIFACT_NAME-$SUB_MODULE_NAME:$ARTIFACT_VERSION")      
          echo "DOCKER_IMAGE_FULL_NAME=$DOCKER_IMAGE_FULL_NAME" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_FULL_NAME = $DOCKER_IMAGE_FULL_NAME"
        env:
          PROJECT_FOLDER: ${{ vars.PROJECT_FOLDER }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Build .jar
        run: |
          ls -a
          cd sources
          mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - name: Build Docker image
        run: |
          ls -a
          cd sources
          docker build -t $DOCKER_IMAGE_FULL_NAME .
      - name: Push Docker image
        run: |
          ls -a
          cd sources
          docker push $DOCKER_IMAGE_FULL_NAME
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.TOKEN }}
      - name: Package Helm Chart
        run: |
          ls -a
          cd sources
          helm dependency update ./helm
          helm package ./helm
          CHART_NAME=$(grep '^name:' ./helm/Chart.yaml | awk '{print $2}')
          CHART_VERSION=$(grep '^version:' ./helm/Chart.yaml | awk '{print $2}')
          CHART_FULL_NAME=${CHART_NAME}-${CHART_VERSION}.tgz
          echo "Chart Name: $CHART_NAME"
          echo "Chart Version: $CHART_VERSION"
          echo "Chart full name: $CHART_FULL_NAME"
          echo "CHART_FULL_NAME=$CHART_FULL_NAME" >> $GITHUB_ENV
          echo "CHART_NAME=$CHART_NAME" >> $GITHUB_ENV
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
      - name: Push Helm Chart to ghcr.io
        id: output
        run: | 
          ls -a
          cd sources
          helm push $CHART_FULL_NAME oci://ghcr.io/yuryklimchuk/prodms
          echo "CHART_NAME=$CHART_NAME" >> $GITHUB_OUTPUT
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_OUTPUT
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
  deploy:
    runs-on: self-hosted
    needs: server
    steps:
      - name: Install helm chart to local minikube
        run: |
          echo $ARTIFACT_NAME
          echo $CHART_FULL_NAME
          helm upgrade --install --namespace prodms --create-namespace ${ARTIFACT_NAME} oci://ghcr.io/yuryklimchuk/prodms/${CHART_NAME}:${CHART_VERSION}
        env:
          ARTIFACT_NAME: ${{ needs.server.outputs.ARTIFACT_NAME }}
          CHART_NAME: ${{ needs.server.outputs.CHART_NAME }}
          CHART_VERSION: ${{ needs.server.outputs.CHART_VERSION }}
